#!/bin/bash

# Root check

if [ "$EUID" -ne 0 ]
	then echo "Please run this command as root"
	exit
fi

# Aliases

# Apt
echo "alias i='sudo apt install -y'" >> /home/arteeh/.bashrc
echo "alias r='sudo apt purge -y'" >> /home/arteeh/.bashrc
echo "alias l='clear;apt list --installed'" >> /home/arteeh/.bashrc
echo "alias u='sudo apt update'" >> /home/arteeh/.bashrc
echo "alias d='sudo apt dist-upgrade -y'" >> /home/arteeh/.bashrc
echo "alias a='sudo apt autoremove --purge -y'" >> /home/arteeh/.bashrc
echo "alias c='sudo apt clean'" >> /home/arteeh/.bashrc

# Update everything
echo "alias up='u;d;a;c'" >> /home/arteeh/.bashrc

# Upgrade to testing
echo "deb http://deb.debian.org/debian/ testing main contrib non-free" > /etc/apt/sources.list

apt update
apt dist-upgrade -y
apt autoremove --purge -y
apt clean

# Install packages

apt install -y \
	openssh-server \
	ufw \
	docker.io \
	docker-compose

apt purge -y \
	popularity-contest \
	vim-common \
	vim-tiny \
	needrestart

apt autoremove --purge -y

# Set up the firewall
ufw enable
ufw default allow outgoing
ufw default deny incoming

# Allow port 22 for SSH
ufw allow 22

# Allow port 81 for Nginx Proxy Manager
ufw allow 81

# Allow port 80 for HTTP (this is only needed for NPM's certbot to work)
ufw allow 80

# Allow port 443 for HTTPS
ufw allow 443

# Git config

git config --global user.name "Maarten de Jong"
git config --global user.email "me@arteeh.com"

echo "Done! You should probably reboot so everything is in the right place."
